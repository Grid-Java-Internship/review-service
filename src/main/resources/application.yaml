spring:
  profiles:
    active: default
  application:
    name: ${SPRING_APP_NAME:review-service}
  datasource:
    url: jdbc:${DB_HOST}://${DB_HOST}:5432/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  config:
    import: file:env.properties
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    template:
      exchange: "notifications"
  devtools:
    livereload:
      enabled: true
server:
  port: 8084
logging:
  pattern:
    console: ${LOG_PATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}
management:
  endpoints:
    web:
      exposure:
        include=*:
configs:
  rabbitmq:
    messaging:
      addedReview: "add.review"
      updatedReview: "update.review"
      forgotPassword: "forgot.password"
  feign:
    jobs: "http://jobservice:8081/v1/jobs"
    client: "http://userservice:8080/v1/users"

